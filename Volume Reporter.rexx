/*REXX*/
CALL OPTION
EXIT 0
E_DSET:
CALL OPEN_OUTPUT
CALL REPORT_HEADER
CALL WRITE_OUTPUT
CALL OPEN_OUTPUT2
CALL WRITE_OUTPUT2
CALL SUB_JOB
CALL AF_SORT
EXIT 0
/*************************/
OPTION:
SAY;SAY;SAY;SAY;
 SAY "*****************************************************************"
 SAY "                 VOLUME REPORTER         "
 SAY "ENTER YOUR CHOICE"
 SAY "1. DATASET INFORMATION"
 SAY "2. ENTER VOLUME- TO GET INFO-LARGEST DATASET/IDENTIFY ORG/RECFM
         SIZE/VOLUME SERIAL."
 SAY "3. EXIT"
 PULL CHOICE
 SELECT
 WHEN CHOICE =1
 THEN CALL D_INFO
 WHEN CHOICE =2
 THEN CALL E_DSET
 WHEN CHOICE =3
 THEN EXIT 0
 EXIT 0
/*************************/
OPEN_OUTPUT:
ADDRESS TSO"ALLOCATE DATASET(MAJOR.INTERN(REPORT)) FI(REPORT) SHR REUSE"
"EXECIO 0 DISKW REPORT (STEM O. OPEN)"
RETURN
/*************************/
REPORT_HEADER:
IN=1
I=1
HLINES=COPIES('-',75)
SAY;SAY;SAY;SAY;
SAY 'ENTER VOLUME NAME'
PARSE PULL VNO;
/*DSLEVEL = 'Z01347.*'*/
/*************************/
ADDRESS ISPEXEC
  IF ISPEXEC("LMDINIT LISTID(LID) VOLUME("VNO")
      ")>=8 THEN EXIT
DO WHILE ISPEXEC("LMDLIST LISTID(&LID) DATASET(DSNAME) STATS(YES)")=0

 /*SAY DSNAME ZDLVOL ZDLSIZE */
 IF I=50 THEN
 LEAVE
 I=I+1
 SAY LEFT('|DSNAME: 'DSNAME ,45),
     LEFT('|VOL: 'ZDLVOL,15) LEFT('|SIZE:' ZDLSIZE,15)
     SAY;
 SAY LEFT('|ORGANIZATION: 'ZDLDSORG ,20) ,
     LEFT('|RECORD FORMAT: 'ZDLRECFM,20)
     SAY LEFT(HLINES,80)
O.IN=LEFT('|DSNAME: 'DSNAME ,45),
     LEFT('|VOL: 'ZDLVOL,15) LEFT('|SIZE:' ZDLSIZE,15)
 IN=IN+1
 END
   CALL ISPEXEC "LMDFREE LISTID(&LID)"
 RETURN
  ISPEXEC:
    ARG CMD
      "CONTROL ERRORS RETURN"
       CMD
       RES = RC
   IF RES >=8 THEN DO
        "SETMSG MSG(ISRZ002)"
        END
        "CONTROL ERRORS CANCEL"
          RETURN RES
/*************************/
WRITE_OUTPUT:
"EXECIO * DISKW REPORT (STEM O. FINIS)"
"FREE FI(REPORT)"
RETURN
/*************************/
OPEN_OUTPUT2:
ADDRESS TSO"ALLOCATE DATASET(MAJOR.INTERN(REPORT)) FI(REPORT) SHR REUSE"
"EXECIO * DISKR REPORT (STEM REPORT. FINIS)"
ADDRESS TSO"ALLOCATE DATASET(MAJOR.INTERN(RPT)) FI(RPT) SHR REUSE"
"EXECIO 0 DISKW RPT (STEM RPT. OPEN)"
RETURN
/*************************/
WRITE_OUTPUT2:
/*      */
   DO I=1 TO REPORT.0
     RPT.I = SUBSTR(REPORT.I,9,77)
   END
/*      */
"EXECIO * DISKW RPT (STEM RPT. FINIS)"
/*      */
"FREE FI(REPORT)"
"FREE FI(RPT)"
RETURN
/*************************/
/*SORT:
ADDRESS TSO"ALLOCATE DATASET(MAJOR.PDS(RPT)) FI(RPT) SHR REUSE"
"EXECIO * DISKR RPT (STEM RPT. FINIS)"
ADDRESS TSO"ALLOCATE DATASET(MAJOR.PDS(RPT1)) FI(RPT1) SHR REUSE"
"EXECIO 0 DISKW RPT1 (STEM RPT1. OPEN)"
 DO I=1 TO RPT.0
   RPT1.I =RPT.I
 END
DO I=1 TO RPT.0
   M=RPT.I
   K=I
   DO J=I+1 TO RPT.0
      IF RPT.J<M THEN DO
         M=RPT.J
         K=J
      END
   END /* DO */
   A=RPT.I
   RPT.I=M
   RPT.K=A
END*/
/*************************/
SUB_JOB:
SAY;SAY;SAY;SAY;SAY;
SAY '*********SORTING********'
SAY;SAY;
DSNA="'Z35705.MAJOR.INTERN(SORT)'"
ADDRESS TSO
"SUBMIT " DSNA
CALL SYSCALLS('ON')    /*ENABLE USS-CALLS*/
SAY '************SORT JOB SUBMISSION*********'
ADDRESS SYSCALL
"SLEEP" 10               /*SLEEP FOR ?? SECONDS*/
CALL SYSCALLS 'OFF'
RETURN
/*************************/
AF_SORT:
SAY;SAY;SAY;SAY;SAY;SAY;SAY;SAY;
SAY LEFT(HLINES,80)
SAY '--------------------10 LARGE DATASET-----------------------'
ADDRESS TSO"ALLOCATE DATASET(MAJOR.INTERN(RPT1)) FI(RPT1) SHR REUSE"
"EXECIO * DISKR RPT1 (STEM RPT1. FINIS)"
 DO I=1 TO RPT1.0
 SAY RPT1.I
 IF I=10 THEN LEAVE
 END
"FREE FI(RPT1)"
RETURN
/*************************/
D_INFO:
SAY 'THIS PROGRAM DISPLAY INFORMATION ON GIVEN DATASET'
SAY 'ENTER YOUR DATASETNAME  '
PULL DSNAME
IF DSNAME =" " THEN   /*DSNAME DEFAULTS IF NULL VALUE ENTERS*/
   DO
     SAY 'NULL VALUE ENTERED'
     DSNAME=Z35705.MAJOR.INTERN
   END
DSNAME="'"||DSNAME||"'"  /*FOR DEALING PREFIX */
RESULT= SYSDSN(DSNAME) /*CHECKS THE DATASET EXIST OR NOT*/
IF RESULT  <> "OK" THEN
DO
   SAY ' DATASET DOES NOT EXIST. PLEASE PROVIDE A VALID DS NAME'
   RETURN
 END

/* -----------GET DATASET INFO--------------------------------*/
  ZALRF=""
 "ISPEXEC DSINFO DATASET("DSNAME")"
 IF RC <> 0 THEN
 DO
   SAY 'ERROR IN GETTING DS INFO: ' ZERRMSG
   EXIT
 END
/* -----------------------------------------------------------*/
/*SAY 'DO YOU PREFER PANEL OR REXX DISPLAY (P/R)? DEFAULT IS R'
PULL CHOICE
IF (CHOICE ='P') THEN  /* POPULATE DATA 4 PANEL DISPLAY */
DO
  ADDRESS 'ISPEXEC'
  ZALVOL1='ZALVOL1'
  ZALSPC = ZDSSPC            /*PRIMARY ALLOCATION UNITS*/
  ZAL2SPC = ZDS2SPC          /*SECONDARY SPACE UNITS*/
  ZAL1EX = STRIP(ZDS1EX)     /*PRIMARY ALLOCATION */
  ZAL2EX = STRIP(ZDS2EX)     /* SECONDARY ALLOC*/
 IF ZDS#VOLS > 1 THEN
    ZALVOL=ZDSVTAB  /*VOLUME TABLE FOR MULTIVOLUME DATASET*/
 ELSE
    ZALVOL=ZDSVOL  /* VOLUME NAME FOR SINGLE VOLUME DATASET*/
    DSNS=DSNAME       /* NAME OF DATASET*/
      ZALSC=ZDSSC       /*STORAGE CLASS*/
      ZALMC=ZDSMC
      ZALDC=ZDSDC
      TOTA=STRIP(ZDSTOTA)
      ZALVOLF='ZALVOLF'
      DEVT=ZDSDEVT
      DSORG=ZDSORG              /*DS ORG*/
      PAGEU=STRIP(ZDSPAGU)
      PERCU=STRIP(ZDSPERU)'%'
      EXTA=STRIP(ZDSEXTA)     /*EXTENDS ALLOCATED*/
      EXTU=STRIP(ZDSEXTU)     /*EXTENDS USED*/
      ZALRF=ZDSRF             /*RECORD FORMAT*/
      ZALLREC=STRIP(ZDSLREC)  /*LRECL*/
      ZALBLK=ZDSBLK           /*BLKSIZE*/
      TOTU=STRIP(ZDSTOTU)
      ZALDSNT=ZDSDSNT         /* DSN TYPE*/
        IF ZDSXDATE= 0 THEN
            EXDATE='**NONE**'
        ELSE
            EXDATE=ZDSXDATE
        CRDT= ZDSCDATE
        RDATE= ZDSRDATE
   /* ----------------- DISPLAY THE PANEL  --------------------------*/
   IF (ZDSDSNT='LIBRARY' | ZDSDSNT='HFS') THEN  /*ISRUAISE EQUIVALENT*/
     'DISPLAY PANEL (DSINFOP1) RETBUFFR('BUFNAME')
      RETLGTH('R17057')'
   ELSE   /* EQUIVALENT OF PANEL ISRUAIES */
     'DISPLAY PANEL (DSINFOP2) RETBUFFR('BUFNAME')
      RETLGTH('R17057')'
   /* ---------------------------------------------------------------*/
  END
  ELSE*/
  DO
  DTS=COPIES('.',30)
  HLINES=COPIES('-',75)
  SPACES=COPIES(' ',8)
  SAY LEFT(SPACES DTS DTS,60)
  SAY LEFT(SPACES'   NAME OF THE DATASET:'DTS,40) DSNAME
  SAY LEFT(SPACES DTS DTS,60)
  SAY LEFT(SPACES' 'HLINES,66)

  /* START OF DATA POPULATION */
  SAY LEFT(SPACES'| CREATED DATE : 'ZDSCDATE SPACES,35),
      LEFT('|  VOLUME   : 'ZDSVOL,25) RIGHT('|',5)
 SAY LEFT(SPACES'| LAST REF DATE: 'ZDSRDATE SPACES,35),
     LEFT('|  UNIT     : 'ZDSDEVT,25) RIGHT('|',5)

 SAY LEFT(SPACES'| EXPIRY DATE  : 'ZDSXDATE SPACES,35),
     LEFT('|  LRECLS   : 'STRIP(ZDSLREC),25) RIGHT('|',5)

 SAY LEFT(SPACES'| DATASET TYPE : 'ZDSDSNT SPACES,35),
     LEFT('|  PRIMARY  : 'STRIP(ZDS1EX) ZDSSPC,25) RIGHT('|',5)

 SAY LEFT(SPACES'| STORCLASS    : 'ZDSSC SPACES,35),
     LEFT('|  SECONDAY : 'STRIP(ZDS2EX) ZDS2SPC,25) RIGHT('|',5)

 SAY LEFT(SPACES'| DATACLASS    : 'ZDSDC SPACES,35),
     LEFT('|  DS ORG   : 'ZDSORG,25) RIGHT('|',5)
 SAY LEFT(SPACES'| MGMTCLASS    : 'ZDSMC SPACES,35),
     LEFT('|  RECFM    : 'ZDSRF,25) RIGHT('|',5)

 SAY LEFT(SPACES'| COMPRESSIBLE : 'ZDSSEQ SPACES,35),
     LEFT('|  MEMBERS  : 'STRIP(ZDS#MEM),25) RIGHT('|',5)

 SAY LEFT(SPACES'| PAGE USED    : 'STRIP(ZDSPAGU) SPACES,35),
     LEFT('|  BLKSIZE  : 'STRIP(ZDSBLK),25) RIGHT('|',5)

 SAY LEFT(SPACES'| %USED(PDSE)  : 'STRIP(ZDSPERU) SPACES,35),
     LEFT('|  EXTENDS  : 'STRIP(ZDSEXTA)' ALLOCATED'SPACES,35),

 SAY LEFT(SPACES'| APF STATUS   : 'ZDSAPF SPACES,35),
     LEFT('|  EXTENDS  : 'STRIP(ZDSEXTU)' USED',25) RIGHT('|',5)
SAY LEFT(SPACES'| DIR BLOCK    : 'STRIP(ZDSDIRA)' ALLOC' SPACES,35),
    LEFT('|  LINKLIST : 'ZDSLNK,25) RIGHT('|',5)

SAY LEFT(SPACES'| DIR BLOCK    : 'STRIP(ZDSDIRU)' USED' SPACES,35),
    LEFT('|  DIR LIMIT: 'STRIP(ZDSDIR),25) RIGHT('|',5)

SAY LEFT(SPACES' 'HLINES,66)
/* END OF DATA POPULATION */
END
EXIT 0

